; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\main.o --asm_dir=.\ --list_dir=.\ --depend=.\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\App\inc -I..\Driver\inc -I..\Libraries\CMSIS\Core\inc -I..\Libraries\CMSIS\Device\inc -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\HalIterface\inc -I..\User\inc -I.\RTE\_Target_1 -IC:\Users\18811\Documents\Keil\STM32F1xx_DFP\1.0.5\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=529 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\main.crf ..\User\src\Main.c]
                          THUMB

                          AREA ||i.Hardware_AllInit||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  Hardware_AllInit PROC
;;;41     
;;;42     void Hardware_AllInit(void)
000000  b510              PUSH     {r4,lr}
;;;43     {
;;;44     	
;;;45     	Bsp_LedInit();
000002  f7fffffe          BL       Bsp_LedInit
;;;46     	
;;;47     
;;;48     	
;;;49     	
;;;50     	
;;;51     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);	// 设置中断优先级分组2
000006  f44f60a0          MOV      r0,#0x500
00000a  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;52     	delay_init();	    	 		//延时函数初始化	  
00000e  f7fffffe          BL       delay_init
;;;53     			  			//初始化与LED连接的硬件接口
;;;54     //	Usart_Init(USART1, 9600);		//串口1初始化,用于调试信息输出
;;;55     	uart_init(1, 9600);
000012  f44f5116          MOV      r1,#0x2580
000016  2001              MOVS     r0,#1
000018  f7fffffe          BL       uart_init
;;;56     //	printf (" \r\n mcu enter main \r\n");
;;;57     	
;;;58     //	stack_test();
;;;59     //	heap_test();
;;;60     //	pack_test();
;;;61     //	macro_define_test();
;;;62     //	cpu_mem_endian();
;;;63     	
;;;64     	
;;;65     #ifdef ADC_FUNC_TEST
;;;66     	Adc_Init();
;;;67     	App_AdcTest();
;;;68     	
;;;69     #endif	//ADC_FUNC_TEST
;;;70     	
;;;71     
;;;72     #if SPI_COMM_MODE
;;;73     	#ifdef HARD_SPI_COMM
;;;74     	spi_master_init(1);
00001c  2001              MOVS     r0,#1
00001e  f7fffffe          BL       spi_master_init
;;;75     	#ifdef OLED_FUNC_TEST
;;;76     	oled_init();
000022  f7fffffe          BL       oled_init
;;;77     //	oled_dis_logo();
;;;78     //	oled_dis_picture(0, 0, 128, 7, bmp_buff);
;;;79     //	oled_dis_num(60, 4, 1314, 4, 16);
;;;80     //	oled_dis_one_char(5, 2, 'A');
;;;81     //	oled_dis_one_char(12, 2, 'B');
;;;82     //	oled_dis_one_char(129, 2, 'B');
;;;83     //	oled_dis_chinese(33,1,0);
;;;84     //	oled_dis_chinese(53,1,1);
;;;85     //	oled_dis_chinese(73,1,2);
;;;86     //	oled_dis_chinese(93,1,3);
;;;87     //	oled_dis_chinese(33,5,4);
;;;88     //	oled_dis_chinese(53,5,5);
;;;89     //	oled_dis_chinese(73,5,6);
;;;90     	oled_dis_chinese(50, 3, 8);
000026  2208              MOVS     r2,#8
000028  2103              MOVS     r1,#3
00002a  2032              MOVS     r0,#0x32
00002c  f7fffffe          BL       oled_dis_chinese
;;;91     	oled_dis_chinese(80, 3, 9);
000030  2209              MOVS     r2,#9
000032  2103              MOVS     r1,#3
000034  2050              MOVS     r0,#0x50
000036  f7fffffe          BL       oled_dis_chinese
;;;92     	#endif
;;;93     	Flash_TestDataInit();
00003a  f7fffffe          BL       Flash_TestDataInit
;;;94     	ulFlashIdVal = spi_flash_read_id();
00003e  f7fffffe          BL       spi_flash_read_id
000042  4908              LDR      r1,|L1.100|
000044  6008              STR      r0,[r1,#0]  ; ulFlashIdVal
;;;95     	printf("Hard --1 spi flash val is 0x%0X \r\n", ulFlashIdVal);
000046  4608              MOV      r0,r1
000048  6801              LDR      r1,[r0,#0]  ; ulFlashIdVal
00004a  a007              ADR      r0,|L1.104|
00004c  f7fffffe          BL       __2printf
;;;96     	ulFlashIdVal = spi_flash_read_id();
000050  f7fffffe          BL       spi_flash_read_id
000054  4903              LDR      r1,|L1.100|
000056  6008              STR      r0,[r1,#0]  ; ulFlashIdVal
;;;97     	printf("Hard --2 Spi flash val is 0x%0X \r\n", ulFlashIdVal);
000058  4608              MOV      r0,r1
00005a  6801              LDR      r1,[r0,#0]  ; ulFlashIdVal
00005c  a00b              ADR      r0,|L1.140|
00005e  f7fffffe          BL       __2printf
;;;98     	#endif	//HARD_SPI_COMM
;;;99     #else
;;;100    	#ifdef SOFT_SPI_COMM
;;;101    	Spi_GpioInit();
;;;102    	Flash_TestDataInit();
;;;103    	
;;;104    	ulFlashIdVal = Flash_ReadJEDECID();
;;;105    	printf("Spi flash val is 0x%0X \r\n", ulFlashIdVal);
;;;106    	
;;;107    //	W25_WriteReadBytes();
;;;108    //	W25_CircleWriteRead(0x01, 0x00, g_WriteData, g_DataTmpBuffer, 256);	//flash循环读写测试
;;;109    	#endif	//SOFT_SPI_COMM
;;;110    #endif	//SPI_COMM_MODE	
;;;111    
;;;112    #ifdef I2C_HTU_TEST
;;;113    	Htu_Init();
;;;114    	ee_at24cxx_init();
;;;115    #endif
;;;116    }
000062  bd10              POP      {r4,pc}
;;;117    
                          ENDP

                  |L1.100|
                          DCD      ulFlashIdVal
                  |L1.104|
000068  48617264          DCB      "Hard --1 spi flash val is 0x%0X \r\n",0
00006c  202d2d31
000070  20737069
000074  20666c61
000078  73682076
00007c  616c2069
000080  73203078
000084  25305820
000088  0d0a00  
00008b  00                DCB      0
                  |L1.140|
00008c  48617264          DCB      "Hard --2 Spi flash val is 0x%0X \r\n",0
000090  202d2d32
000094  20537069
000098  20666c61
00009c  73682076
0000a0  616c2069
0000a4  73203078
0000a8  25305820
0000ac  0d0a00  
0000af  00                DCB      0

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  main PROC
;;;118    
;;;119    int main(void)
000000  f7fffffe          BL       Hardware_AllInit
;;;120    {	
;;;121    	Hardware_AllInit();
;;;122    	
;;;123    #ifdef DEBUG_ENABLE
;;;124    	printk("Using Usart1 Output Debuging Infomation\r\n");
000004  a015              ADR      r0,|L2.92|
000006  f7fffffe          BL       __2printf
;;;125    #endif
;;;126    	
;;;127    	while(1)
00000a  e026              B        |L2.90|
                  |L2.12|
;;;128    	{
;;;129    		Sys_DelayUs(1000);
00000c  f44f707a          MOV      r0,#0x3e8
000010  f7fffffe          BL       Sys_DelayUs
;;;130    		Sys_DelayUs(1000);
000014  f44f707a          MOV      r0,#0x3e8
000018  f7fffffe          BL       Sys_DelayUs
;;;131    		Sys_DelayUs(1000);
00001c  f44f707a          MOV      r0,#0x3e8
000020  f7fffffe          BL       Sys_DelayUs
;;;132    		Sys_DelayUs(1000);
000024  f44f707a          MOV      r0,#0x3e8
000028  f7fffffe          BL       Sys_DelayUs
;;;133    		Bsp_LedTest(500);
00002c  f44f70fa          MOV      r0,#0x1f4
000030  f7fffffe          BL       Bsp_LedTest
;;;134    		
;;;135    	#ifdef ADC_FUNC_TEST
;;;136    		Adc_Init();
;;;137    		App_AdcTest();
;;;138    		
;;;139    	#endif	//ADC_FUNC_TEST
;;;140    
;;;141    #if SPI_COMM_MODE		
;;;142    	#ifdef 	HARD_SPI_COMM
;;;143    		ulFlashIdVal = Flash_ReadJEDECID();
000034  f7fffffe          BL       Flash_ReadJEDECID
000038  4913              LDR      r1,|L2.136|
00003a  6008              STR      r0,[r1,#0]  ; ulFlashIdVal
;;;144    		printf(" hard spi flash val is 0x%0X \r\n", ulFlashIdVal);
00003c  4608              MOV      r0,r1
00003e  6801              LDR      r1,[r0,#0]  ; ulFlashIdVal
000040  a012              ADR      r0,|L2.140|
000042  f7fffffe          BL       __2printf
;;;145    		W25_WriteReadBytes();
000046  f7fffffe          BL       W25_WriteReadBytes
;;;146    
;;;147    	#endif	//HARD_SPI_COMM	
;;;148    #else	
;;;149    	#ifdef SOFT_SPI_COMM	
;;;150    		ulFlashIdVal = Flash_ReadJEDECID();
;;;151    		printf(" soft spi flash val is 0x%0X \r\n", ulFlashIdVal);
;;;152    		W25_WriteReadBytes();
;;;153    	#endif	//SOFT_SPI_COM
;;;154    	
;;;155    #endif	//SPI_COMM_MODE
;;;156    
;;;157    #ifdef I2C_HTU_TEST
;;;158    	Htu_Display();
;;;159    	ee_at24cxx_test();
;;;160    #endif
;;;161    
;;;162    #ifdef UART_FUNC_TEST
;;;163    //	uart_test();
;;;164    #endif
;;;165    
;;;166    //	printf("Main is ruinning\r\n");
;;;167    	Bsp_LedTest(300);
00004a  f44f7096          MOV      r0,#0x12c
00004e  f7fffffe          BL       Bsp_LedTest
;;;168    //	sprintf_test();	
;;;169    //	strcpy_test();
;;;170    //	memcmp_test();
;;;171    //  strcmp_test();
;;;172    
;;;173    		delay_ms(500);
000052  f44f70fa          MOV      r0,#0x1f4
000056  f7fffffe          BL       delay_ms
                  |L2.90|
00005a  e7d7              B        |L2.12|
;;;174    		
;;;175    //	if (USART_RX_STA)
;;;176    //	{
;;;177    //		printf("mcu will soft reset\r\n");
;;;178    //		NVIC_SystemReset();
;;;179    //		printf("mcu reset ok\r\n");
;;;180    //	}
;;;181    		
;;;182    	}
;;;183    }
;;;184    
                          ENDP

                  |L2.92|
00005c  5573696e          DCB      "Using Usart1 Output Debuging Infomation\r\n",0
000060  67205573
000064  61727431
000068  204f7574
00006c  70757420
000070  44656275
000074  67696e67
000078  20496e66
00007c  6f6d6174
000080  696f6e0d
000084  0a00    
000086  00                DCB      0
000087  00                DCB      0
                  |L2.136|
                          DCD      ulFlashIdVal
                  |L2.140|
00008c  20686172          DCB      " hard spi flash val is 0x%0X \r\n",0
000090  64207370
000094  6920666c
000098  61736820
00009c  76616c20
0000a0  69732030
0000a4  78253058
0000a8  200d0a00

                          AREA ||.data||, DATA, ALIGN=2

                  ulFlashIdVal
                          DCD      0x00000000

                  __ARM_use_no_argv EQU 0
