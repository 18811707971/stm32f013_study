; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\main.o --asm_dir=.\ --list_dir=.\ --depend=.\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\App\inc -I..\Driver\inc -I..\Libraries\CMSIS\Core\inc -I..\Libraries\CMSIS\Device\inc -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\HalIterface\inc -I..\User\inc -I.\RTE\_Target_1 -IC:\Users\18811\Documents\Keil\STM32F1xx_DFP\1.0.5\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=529 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\main.crf ..\User\src\Main.c]
                          THUMB

                          AREA ||i.Hardware_AllInit||, CODE, READONLY, ALIGN=1

                  Hardware_AllInit PROC
;;;44     
;;;45     void Hardware_AllInit(void)
000000  b510              PUSH     {r4,lr}
;;;46     {
;;;47     	
;;;48     	Bsp_LedInit();
000002  f7fffffe          BL       Bsp_LedInit
;;;49     	
;;;50     
;;;51     	
;;;52     	
;;;53     	
;;;54     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);	// 设置中断优先级分组2
000006  f44f60a0          MOV      r0,#0x500
00000a  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;55     	delay_init();	    	 		//延时函数初始化	  
00000e  f7fffffe          BL       delay_init
;;;56     			  			//初始化与LED连接的硬件接口
;;;57     //	Usart_Init(USART1, 9600);		//串口1初始化,用于调试信息输出
;;;58     	uart_init(1, 9600);
000012  f44f5116          MOV      r1,#0x2580
000016  2001              MOVS     r0,#1
000018  f7fffffe          BL       uart_init
;;;59     //	printf (" \r\n mcu enter main \r\n");
;;;60     	
;;;61     //	stack_test();
;;;62     //	heap_test();
;;;63     	pack_test();
00001c  f7fffffe          BL       pack_test
;;;64     //	macro_define_test();
;;;65     //	cpu_mem_endian();
;;;66     	
;;;67     	
;;;68     #ifdef ADC_FUNC_TEST
;;;69     	Adc_Init();
;;;70     	App_AdcTest();
;;;71     	
;;;72     #endif	//ADC_FUNC_TEST
;;;73     	
;;;74     
;;;75     #if SPI_COMM_MODE
;;;76     	#ifdef HARD_SPI_COMM
;;;77     	spi_master_init(1);
;;;78     	Flash_TestDataInit();
;;;79     	ulFlashIdVal = spi_flash_read_id();
;;;80     	printf("Hard --1 spi flash val is 0x%0X \r\n", ulFlashIdVal);
;;;81     	ulFlashIdVal = spi_flash_read_id();
;;;82     	printf("Hard --2 Spi flash val is 0x%0X \r\n", ulFlashIdVal);
;;;83     	#endif	//HARD_SPI_COMM
;;;84     #else
;;;85     	#ifdef SOFT_SPI_COMM
;;;86     	Spi_GpioInit();
;;;87     	Flash_TestDataInit();
;;;88     	
;;;89     	ulFlashIdVal = Flash_ReadJEDECID();
;;;90     	printf("Spi flash val is 0x%0X \r\n", ulFlashIdVal);
;;;91     	
;;;92     //	W25_WriteReadBytes();
;;;93     //	W25_CircleWriteRead(0x01, 0x00, g_WriteData, g_DataTmpBuffer, 256);	//flash循环读写测试
;;;94     	#endif	//SOFT_SPI_COMM
;;;95     #endif	//SPI_COMM_MODE	
;;;96     
;;;97     #ifdef I2C_HTU_TEST
;;;98     	Htu_Init();
;;;99     	ee_at24cxx_init();
;;;100    #endif
;;;101    }
000020  bd10              POP      {r4,pc}
;;;102    
                          ENDP


                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;103    
;;;104    int main(void)
000000  f7fffffe          BL       Hardware_AllInit
;;;105    {	
;;;106    	Hardware_AllInit();
;;;107    	
;;;108    #ifdef DEBUG_ENABLE
;;;109    	printk("Using Usart1 Output Debuging Infomation\r\n");
000004  a010              ADR      r0,|L2.72|
000006  f7fffffe          BL       __2printf
;;;110    #endif
;;;111    	
;;;112    	while(1)
00000a  e01b              B        |L2.68|
                  |L2.12|
;;;113    	{
;;;114    		Sys_DelayUs(1000);
00000c  f44f707a          MOV      r0,#0x3e8
000010  f7fffffe          BL       Sys_DelayUs
;;;115    		Sys_DelayUs(1000);
000014  f44f707a          MOV      r0,#0x3e8
000018  f7fffffe          BL       Sys_DelayUs
;;;116    		Sys_DelayUs(1000);
00001c  f44f707a          MOV      r0,#0x3e8
000020  f7fffffe          BL       Sys_DelayUs
;;;117    		Sys_DelayUs(1000);
000024  f44f707a          MOV      r0,#0x3e8
000028  f7fffffe          BL       Sys_DelayUs
;;;118    		Bsp_LedTest(500);
00002c  f44f70fa          MOV      r0,#0x1f4
000030  f7fffffe          BL       Bsp_LedTest
;;;119    		
;;;120    	#ifdef ADC_FUNC_TEST
;;;121    		Adc_Init();
;;;122    		App_AdcTest();
;;;123    		
;;;124    	#endif	//ADC_FUNC_TEST
;;;125    
;;;126    #if SPI_COMM_MODE		
;;;127    	#ifdef 	HARD_SPI_COMM
;;;128    		ulFlashIdVal = Flash_ReadJEDECID();
;;;129    		printf(" hard spi flash val is 0x%0X \r\n", ulFlashIdVal);
;;;130    		W25_WriteReadBytes();
;;;131    
;;;132    	#endif	//HARD_SPI_COMM	
;;;133    #else	
;;;134    	#ifdef SOFT_SPI_COMM	
;;;135    		ulFlashIdVal = Flash_ReadJEDECID();
;;;136    		printf(" soft spi flash val is 0x%0X \r\n", ulFlashIdVal);
;;;137    		W25_WriteReadBytes();
;;;138    	#endif	//SOFT_SPI_COM
;;;139    	
;;;140    #endif	//SPI_COMM_MODE
;;;141    
;;;142    #ifdef I2C_HTU_TEST
;;;143    	Htu_Display();
;;;144    	ee_at24cxx_test();
;;;145    #endif
;;;146    
;;;147    #ifdef UART_FUNC_TEST
;;;148    //	uart_test();
;;;149    #endif
;;;150    
;;;151    //	printf("Main is ruinning\r\n");
;;;152    	Bsp_LedTest(300);
000034  f44f7096          MOV      r0,#0x12c
000038  f7fffffe          BL       Bsp_LedTest
;;;153    //	sprintf_test();	
;;;154    //	strcpy_test();
;;;155    //	memcmp_test();
;;;156    //  strcmp_test();
;;;157    
;;;158    		delay_ms(500);
00003c  f44f70fa          MOV      r0,#0x1f4
000040  f7fffffe          BL       delay_ms
                  |L2.68|
000044  e7e2              B        |L2.12|
;;;159    		
;;;160    //	if (USART_RX_STA)
;;;161    //	{
;;;162    //		printf("mcu will soft reset\r\n");
;;;163    //		NVIC_SystemReset();
;;;164    //		printf("mcu reset ok\r\n");
;;;165    //	}
;;;166    		
;;;167    	}
;;;168    }
;;;169    
                          ENDP

000046  0000              DCW      0x0000
                  |L2.72|
000048  5573696e          DCB      "Using Usart1 Output Debuging Infomation\r\n",0
00004c  67205573
000050  61727431
000054  204f7574
000058  70757420
00005c  44656275
000060  67696e67
000064  20496e66
000068  6f6d6174
00006c  696f6e0d
000070  0a00    
000072  00                DCB      0
000073  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  ulFlashIdVal
                          DCD      0x00000000

                  __ARM_use_no_argv EQU 0
